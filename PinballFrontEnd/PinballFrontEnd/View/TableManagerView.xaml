<Controls:MetroWindow
    x:Class="PinballFrontEnd.View.TableManagerView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:local="clr-namespace:PinballFrontEnd.View"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    mc:Ignorable="d"
    Title="PFE Table Manager"
    Width="1600"
    Height="900"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    Closing="Window_Closing"
    Topmost="{Binding TopMost, Mode=TwoWay, NotifyOnSourceUpdated=True,NotifyOnTargetUpdated=True}"
    WindowStartupLocation="CenterScreen">


    <Controls:MetroWindow.RightWindowCommands>
        <Controls:WindowCommands>
            <ToggleButton
                x:Name="BtnImport"
                Content="Import"
                IsChecked="{Binding ElementName=ImportFlyout, Path=IsOpen}"
                Cursor="Hand"
                FontSize="20" />

            <Button
                Content="Generate Thumbnails"
                Command="{Binding GenerateThumbnailsCommand}" />

        </Controls:WindowCommands>
    </Controls:MetroWindow.RightWindowCommands>



    <Controls:MetroWindow.Flyouts>
        <Controls:FlyoutsControl>

            <Controls:Flyout
                x:Name="ImportFlyout"
                Header="Import"
                Position="Right"
                Width="400"
                Theme="Accent">
                <StackPanel>
                    <Button
                        Content="Playfield Video"
                        Command="{Binding GetPlayfieldCommand}" />
                    <Button
                        Content="Backglass Video"
                        Command="{Binding GetBackglassCommand}" />
                    <Button
                        Content="DMD Video"
                        Command="{Binding GetDMDCommand}" />
                    <Button
                        Content="Wheel Image"
                        Command="{Binding GetWheelCommand}" />
                    <Button
                        Content="Table Audio"
                        Command="{Binding GetTableAudioCommand}" />
                    <Button
                        Content="Launch Audio"
                        Command="{Binding GetLaunchAudioCommand}" />
                    <StackPanel
                        Orientation="Horizontal"
                        HorizontalAlignment="Left">
                        <TextBlock
                            Text="Convert: " />
                        <Controls:ToggleSwitch
                            Grid.Row="1"
                            Grid.Column="1"
                            HorizontalAlignment="Center"
                            IsChecked="{Binding Data.MediaLocation.ConvertOnImport, UpdateSourceTrigger=PropertyChanged}" />
                    </StackPanel>


                </StackPanel>

                <!--Your custom content here-->
            </Controls:Flyout>

        </Controls:FlyoutsControl>
    </Controls:MetroWindow.Flyouts>



    <Window.Resources>




        <SolidColorBrush
            x:Key="FileExists"
            Color="DarkGray" />



        <local:UriToCachedImageConverter
            x:Key="uriToImageConv" />

        <local:ExpandedConverter
            x:Key="ExpandedConverter" />


        <Thickness
            x:Key="CommonMargin"
            Left="2"
            Right="2"
            Top="2"
            Bottom="2" />
        <sys:Double
            x:Key="BaseFontSize">14</sys:Double>
        <sys:Double
            x:Key="Title1">18</sys:Double>
        <sys:Double
            x:Key="Title2">16</sys:Double>


        <!-- Image Button Template-->
        <Style
            x:Key="IconButton"
            TargetType="Button"
            BasedOn="{StaticResource {x:Type Button}}">

            <Setter
                Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Grid>
                            <ContentPresenter
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style
            x:Key="TableHeader"
            TargetType="TextBlock"
            BasedOn="{StaticResource {x:Type TextBlock}}">
            <Setter
                Property="FontSize"
                Value="{StaticResource Title2}" />
            <Setter
                Property="FontWeight"
                Value="Bold" />
        </Style>

        <Style
            TargetType="ToggleButton"
            BasedOn="{StaticResource {x:Type ToggleButton}}">
            <Setter
                Property="FontSize"
                Value="{StaticResource BaseFontSize}" />
            <Setter
                Property="Margin"
                Value="{StaticResource CommonMargin}" />
        </Style>

        <Style
            TargetType="Button"
            BasedOn="{StaticResource {x:Type Button}}">
            <Setter
                Property="FontSize"
                Value="{StaticResource BaseFontSize}" />
            <Setter
                Property="Margin"
                Value="{StaticResource CommonMargin}" />
        </Style>

        <Style
            TargetType="TextBox"
            BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter
                Property="FontSize"
                Value="{StaticResource BaseFontSize}" />
            <Setter
                Property="Margin"
                Value="{StaticResource CommonMargin}" />
        </Style>

        <Style
            TargetType="Expander"
            BasedOn="{StaticResource {x:Type Expander}}">
            <Setter
                Property="FontSize"
                Value="{StaticResource Title1}" />
            <Setter
                Property="FontWeight"
                Value="Bold" />
            <Setter
                Property="Margin"
                Value="{StaticResource CommonMargin}" />
        </Style>


        <Style
            TargetType="DataGrid"
            BasedOn="{StaticResource {x:Type DataGrid}}">
            <Setter
                Property="FontSize"
                Value="{StaticResource BaseFontSize}" />
            <Setter
                Property="Margin"
                Value="{StaticResource CommonMargin}" />
        </Style>

        <!--<Style TargetType="MediaElement">
            <Setter Property="Margin" Value="{StaticResource CommonMargin}" />
        </Style>-->

        <Style
            TargetType="TextBlock"
            BasedOn="{StaticResource {x:Type TextBlock}}">
            <Setter
                Property="FontSize"
                Value="{StaticResource BaseFontSize}" />
            <Setter
                Property="Margin"
                Value="{StaticResource CommonMargin}" />
        </Style>

        <Style
            TargetType="ComboBox"
            BasedOn="{StaticResource {x:Type ComboBox}}">
            <Setter
                Property="FontSize"
                Value="{StaticResource BaseFontSize}" />
            <Setter
                Property="Margin"
                Value="{StaticResource CommonMargin}" />
        </Style>


    </Window.Resources>




    <DockPanel>




        <!-- FrontEnd Settings -->
        <Expander
            DockPanel.Dock="Top"
            Grid.Column="0"
            Grid.Row="0"
            HorizontalAlignment="Stretch"
            IsExpanded="{Binding CurrentExpanded, Converter={StaticResource ExpandedConverter}, ConverterParameter=1}">
            <Expander.Header>

                <TextBlock
                    Grid.Row="0"
                    Grid.Column="1"
                    Grid.ColumnSpan="3"
                    Text="Front End Settings"
                    HorizontalAlignment="Left" />


            </Expander.Header>



            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition
                        Width="*" />
                    <ColumnDefinition
                        Width="*" />
                    <ColumnDefinition
                        Width="*" />
                    <ColumnDefinition
                        Width="*" />
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>


                <TextBlock
                    Grid.Row="1"
                    Grid.Column="1"
                    Text="Playfield"
                    HorizontalAlignment="Center"
                    Style="{StaticResource TableHeader}" />

                <TextBlock
                    Grid.Row="1"
                    Grid.Column="2"
                    Text="Backglass"
                    HorizontalAlignment="Center"
                    Style="{StaticResource TableHeader}" />

                <TextBlock
                    Grid.Row="1"
                    Grid.Column="3"
                    Text="DMD"
                    HorizontalAlignment="Center"
                    Style="{StaticResource TableHeader}" />


                <TextBlock
                    Grid.Row="2"
                    Grid.Column="0"
                    Text="X Location:"
                    HorizontalAlignment="Right"
                    Style="{StaticResource TableHeader}" />

                <TextBlock
                    Grid.Row="3"
                    Grid.Column="0"
                    Text="Y Location:"
                    HorizontalAlignment="Right"
                    Style="{StaticResource TableHeader}" />

                <TextBlock
                    Grid.Row="4"
                    Grid.Column="0"
                    Text="Width:"
                    HorizontalAlignment="Right"
                    Style="{StaticResource TableHeader}" />

                <TextBlock
                    Grid.Row="5"
                    Grid.Column="0"
                    Text="Height:"
                    HorizontalAlignment="Right"
                    Style="{StaticResource TableHeader}" />

                <TextBlock
                    Grid.Row="6"
                    Grid.Column="0"
                    Text="Rotation:"
                    HorizontalAlignment="Right"
                    Style="{StaticResource TableHeader}" />

                <!-- Playfield X Location -->
                <TextBox
                    Grid.Row="2"
                    Grid.Column="1"
                    HorizontalAlignment="Stretch"
                    TextAlignment="Center"
                    Margin="{StaticResource CommonMargin}"
                    Text="{Binding Data.MediaLocation.PlayfieldLocationX, UpdateSourceTrigger=PropertyChanged}" />

                <!-- Playfield Y Location -->
                <TextBox
                    Grid.Row="3"
                    Grid.Column="1"
                    HorizontalAlignment="Stretch"
                    TextAlignment="Center"
                    Margin="{StaticResource CommonMargin}"
                    Text="{Binding Data.MediaLocation.PlayfieldLocationY, UpdateSourceTrigger=PropertyChanged}" />

                <!-- Playfield Width -->
                <TextBox
                    Grid.Row="4"
                    Grid.Column="1"
                    HorizontalAlignment="Stretch"
                    TextAlignment="Center"
                    Margin="{StaticResource CommonMargin}"
                    Text="{Binding Data.MediaLocation.PlayfieldSizeX, UpdateSourceTrigger=PropertyChanged}" />

                <!-- Playfield Height -->
                <TextBox
                    Grid.Row="5"
                    Grid.Column="1"
                    HorizontalAlignment="Stretch"
                    TextAlignment="Center"
                    Margin="{StaticResource CommonMargin}"
                    Text="{Binding Data.MediaLocation.PlayfieldSizeY, UpdateSourceTrigger=PropertyChanged}" />

                <!-- Playfield Rotation -->
                <TextBox
                    Grid.Row="6"
                    Grid.Column="1"
                    HorizontalAlignment="Stretch"
                    TextAlignment="Center"
                    Margin="{StaticResource CommonMargin}"
                    Text="{Binding Data.MediaLocation.PlayfieldRotation, UpdateSourceTrigger=PropertyChanged}" />


                <!-- Backglass X Location -->
                <TextBox
                    Grid.Row="2"
                    Grid.Column="2"
                    HorizontalAlignment="Stretch"
                    TextAlignment="Center"
                    Margin="{StaticResource CommonMargin}"
                    Text="{Binding Data.MediaLocation.BackglassLocationX, UpdateSourceTrigger=PropertyChanged}" />

                <!-- Backglass Y Location -->
                <TextBox
                    Grid.Row="3"
                    Grid.Column="2"
                    HorizontalAlignment="Stretch"
                    TextAlignment="Center"
                    Margin="{StaticResource CommonMargin}"
                    Text="{Binding Data.MediaLocation.BackglassLocationY, UpdateSourceTrigger=PropertyChanged}" />

                <!-- Backglass Width -->
                <TextBox
                    Grid.Row="4"
                    Grid.Column="2"
                    HorizontalAlignment="Stretch"
                    TextAlignment="Center"
                    Margin="{StaticResource CommonMargin}"
                    Text="{Binding Data.MediaLocation.BackglassSizeX, UpdateSourceTrigger=PropertyChanged}" />

                <!-- Backglass Height -->
                <TextBox
                    Grid.Row="5"
                    Grid.Column="2"
                    HorizontalAlignment="Stretch"
                    TextAlignment="Center"
                    Margin="{StaticResource CommonMargin}"
                    Text="{Binding Data.MediaLocation.BackglassSizeY, UpdateSourceTrigger=PropertyChanged}" />

                <!-- Backglass Rotation -->
                <TextBox
                    Grid.Row="6"
                    Grid.Column="2"
                    HorizontalAlignment="Stretch"
                    TextAlignment="Center"
                    Margin="{StaticResource CommonMargin}"
                    Text="{Binding Data.MediaLocation.BackglassRotation, UpdateSourceTrigger=PropertyChanged}" />


                <!-- DMD X Location -->
                <TextBox
                    Grid.Row="2"
                    Grid.Column="3"
                    HorizontalAlignment="Stretch"
                    TextAlignment="Center"
                    Margin="{StaticResource CommonMargin}"
                    Text="{Binding Data.MediaLocation.DMDLocationX, UpdateSourceTrigger=PropertyChanged}" />

                <!-- DMD Y Location -->
                <TextBox
                    Grid.Row="3"
                    Grid.Column="3"
                    HorizontalAlignment="Stretch"
                    TextAlignment="Center"
                    Margin="{StaticResource CommonMargin}"
                    Text="{Binding Data.MediaLocation.DMDLocationY, UpdateSourceTrigger=PropertyChanged}" />

                <!-- DMD Width -->
                <TextBox
                    Grid.Row="4"
                    Grid.Column="3"
                    HorizontalAlignment="Stretch"
                    TextAlignment="Center"
                    Margin="{StaticResource CommonMargin}"
                    Text="{Binding Data.MediaLocation.DMDSizeX, UpdateSourceTrigger=PropertyChanged}" />

                <!-- DMD Height -->
                <TextBox
                    Grid.Row="5"
                    Grid.Column="3"
                    HorizontalAlignment="Stretch"
                    TextAlignment="Center"
                    Margin="{StaticResource CommonMargin}"
                    Text="{Binding Data.MediaLocation.DMDSizeY, UpdateSourceTrigger=PropertyChanged}" />

                <!-- DMD Rotation -->
                <TextBox
                    Grid.Row="6"
                    Grid.Column="3"
                    HorizontalAlignment="Stretch"
                    TextAlignment="Center"
                    Margin="{StaticResource CommonMargin}"
                    Text="{Binding Data.MediaLocation.DMDRotation, UpdateSourceTrigger=PropertyChanged}" />

                <!-- Show Dummy Windows Button -->
                <Button
                    Grid.Row="7"
                    Grid.Column="1"
                    Grid.ColumnSpan="3"
                    Content="Show/Hide Window Locations"
                    Command="{Binding DummyWindowButton}" />

                <!-- Thumbnail Resolution-->
                <TextBlock
                    Grid.Row="8"
                    Grid.Column="0"
                    Grid.ColumnSpan="3"
                    Text="Thumbnail Resolution (0 = Full Resolution):"
                    HorizontalAlignment="Right" />
                <TextBox
                    Grid.Row="8"
                    Grid.Column="3"
                    HorizontalAlignment="Stretch"
                    TextAlignment="Center"
                    Text="{Binding Data.MediaLocation.ThumbnailResolution}" />


            </Grid>

        </Expander>

        <!-- Keybindings -->
        <Expander
            DockPanel.Dock="Top"
            Grid.Column="0"
            Grid.Row="1"
            HorizontalAlignment="Stretch"
            IsExpanded="{Binding CurrentExpanded, Converter={StaticResource ExpandedConverter}, ConverterParameter=2}">
            <Expander.Header>

                <TextBlock
                    Grid.Row="0"
                    Grid.Column="1"
                    Grid.ColumnSpan="3"
                    Text="Keybindings"
                    HorizontalAlignment="Left" />


            </Expander.Header>



            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition
                        Width="*" />
                    <ColumnDefinition
                        Width="3*" />
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>

                <TextBlock
                    Grid.Row="0"
                    Grid.Column="1"
                    Text="Not Yet Implimented. Change in JSON." />

                <!--<TextBlock
                            Grid.Row="0"
                            Grid.Column="0"
                            Text="Next Table" />

                        <TextBox
                            Grid.Row="0"
                            Grid.Column="1"
                            Text="" />-->


            </Grid>

        </Expander>

        <!-- System Information -->
        <Expander
            DockPanel.Dock="Top"
            Grid.Column="0"
            Grid.Row="2"
            HorizontalAlignment="Stretch"
            IsExpanded="{Binding CurrentExpanded, Converter={StaticResource ExpandedConverter}, ConverterParameter=3}">
            <Expander.Header>

                <TextBlock
                    Grid.Row="0"
                    Grid.Column="1"
                    Grid.ColumnSpan="1"
                    Text="System Settings"
                    HorizontalAlignment="Left" />


            </Expander.Header>


            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition
                        Width="*"
                        MaxWidth="200" />
                    <ColumnDefinition
                        Width="3*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition />

                </Grid.RowDefinitions>

                <DockPanel
                    Grid.Column="0"
                    Grid.Row="0">

                    <TextBlock
                        Text="System Select"
                        HorizontalAlignment="Center"
                        DockPanel.Dock="Top"
                        FontWeight="Bold"
                        FontSize="20" />


                    <DataGrid
                        x:Name="SystemSelect"
                        ItemsSource="{Binding Data.SystemList}"
                        DisplayMemberPath="Name"
                        AutoGenerateColumns="False"
                        SelectedValue="{Binding SelectedSystem, Mode=TwoWay}"
                        DockPanel.Dock="Top">

                        <DataGrid.Columns>
                            <DataGridTextColumn
                                Header="System"
                                Binding="{Binding Name}"
                                Width="*" />
                        </DataGrid.Columns>

                    </DataGrid>

                </DockPanel>

                <Grid
                    Grid.Column="1"
                    Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition
                            Width="*"
                            MaxWidth="200" />
                        <ColumnDefinition
                            Width="3*" />
                    </Grid.ColumnDefinitions>

                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>




                    <!-- System Name -->
                    <TextBlock
                        Grid.Row="1"
                        Grid.Column="0"
                        Text="Name:"
                        HorizontalAlignment="Right" />
                    <TextBox
                        Grid.Row="1"
                        Grid.Column="1"
                        HorizontalAlignment="Stretch"
                        Text="{Binding SelectedItem.Name, ElementName=SystemSelect, UpdateSourceTrigger=PropertyChanged}" />

                    <!-- Working Path -->
                    <TextBlock
                        Grid.Row="2"
                        Grid.Column="0"
                        Text="Working Path:"
                        HorizontalAlignment="Right" />
                    <TextBox
                        Grid.Row="2"
                        Grid.Column="1"
                        HorizontalAlignment="Stretch"
                        Text="{Binding SelectedItem.WorkingPath, ElementName=SystemSelect, UpdateSourceTrigger=PropertyChanged}" />

                    <!-- Executable -->
                    <TextBlock
                        Grid.Row="3"
                        Grid.Column="0"
                        Text="Executable:"
                        HorizontalAlignment="Right" />
                    <TextBox
                        Grid.Row="3"
                        Grid.Column="1"
                        HorizontalAlignment="Stretch"
                        Text="{Binding SelectedItem.Executable, ElementName=SystemSelect, UpdateSourceTrigger=PropertyChanged}" />

                    <!-- Parameters -->
                    <TextBlock
                        Grid.Row="4"
                        Grid.Column="0"
                        Text="Parameters:"
                        HorizontalAlignment="Right" />
                    <TextBox
                        Grid.Row="4"
                        Grid.Column="1"
                        HorizontalAlignment="Stretch"
                        Text="{Binding SelectedItem.Parameters, ElementName=SystemSelect, UpdateSourceTrigger=PropertyChanged}" />


                    <!-- Wait Time -->
                    <TextBlock
                        Grid.Row="5"
                        Grid.Column="0"
                        Text="Wait Time:"
                        HorizontalAlignment="Right" />
                    <TextBox
                        Grid.Row="5"
                        Grid.Column="1"
                        HorizontalAlignment="Stretch"
                        Text="{Binding SelectedItem.WaitTime, ElementName=SystemSelect, UpdateSourceTrigger=PropertyChanged}" />


                    <TextBlock
                        Grid.Row="6"
                        Grid.Column="0"
                        Text="Window Name:"
                        HorizontalAlignment="Right" />
                    <TextBox
                        Grid.Row="6"
                        Grid.Column="1"
                        HorizontalAlignment="Stretch"
                        Text="{Binding SelectedItem.WindowName, ElementName=SystemSelect, UpdateSourceTrigger=PropertyChanged}" />

                </Grid>


            </Grid>


        </Expander>

        <!-- Table Settings -->
        <Expander
            DockPanel.Dock="Top"
            Grid.Column="0"
            Grid.Row="3"
            VerticalAlignment="Top"
            IsExpanded="{Binding CurrentExpanded, Converter={StaticResource ExpandedConverter}, ConverterParameter=4}">
            <Expander.Header>

                <TextBlock
                    Grid.Row="0"
                    Grid.Column="1"
                    Grid.ColumnSpan="2"
                    Text="Table Settings"
                    HorizontalAlignment="Left" />

            </Expander.Header>

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition
                        Width="3*" />
                    <ColumnDefinition
                        Width="*" />
                    <ColumnDefinition
                        Width="*" />
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition
                        Height="*" />
                </Grid.RowDefinitions>


                <Grid
                    Grid.Row="0"
                    Grid.Column="0"
                    Grid.ColumnSpan="3">

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                    </Grid.RowDefinitions>



                    <TextBlock
                        Grid.Column="0"
                        Grid.Row="0"
                        Text="Table Select"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Top"
                        FontWeight="Bold"
                        FontSize="20" />


                    <DataGrid
                        Grid.Column="0"
                        Grid.Row="1"
                        x:Name="TableSelect"
                        ItemsSource="{Binding Data.TableList}"
                        DisplayMemberPath="Name"
                        SelectionMode="Single"
                        AutoGenerateColumns="False"
                        SelectedValue="{Binding SelectedTable, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, NotifyOnSourceUpdated=True, NotifyOnTargetUpdated=True}"
                        ScrollViewer.CanContentScroll="True"
                        ScrollViewer.VerticalScrollBarVisibility="Auto"
                        ScrollViewer.HorizontalScrollBarVisibility="Auto"
                        VerticalAlignment="Top"
                        RowDetailsVisibilityMode="Collapsed"
                        GridLinesVisibility="All"
                        HorizontalAlignment="Stretch"
                        HorizontalContentAlignment="Stretch">


                        <DataGrid.Columns>
                            <!--<DataGridCheckBoxColumn 
                        Header="Enabled"
                        Binding="{Binding Enabled}"/>-->

                            <DataGridTemplateColumn
                                Header="Enabled"
                                SortMemberPath="Enabled">

                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel
                                            Orientation="Horizontal">
                                            <Button
                                                Content="{iconPacks:Material Kind=XboxController}"
                                                ToolTip="Play"
                                                Command="{Binding DataContext.StartTableCommand , RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" />
                                            <CheckBox
                                                Grid.Row="1"
                                                Grid.Column="0"
                                                HorizontalAlignment="Center"
                                                IsChecked="{Binding Enabled, UpdateSourceTrigger=PropertyChanged}" />
                                        </StackPanel>

                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTextColumn
                                Header="Table"
                                Binding="{Binding Description}" />
                            <DataGridTextColumn
                                Header="Name"
                                Binding="{Binding Name}" />
                            <DataGridTextColumn
                                Header="Manufacturer"
                                Binding="{Binding Manufacturer}" />
                            <DataGridTextColumn
                                Header="Year"
                                Binding="{Binding Year}" />

                            <DataGridTemplateColumn
                                Header="System"
                                SortMemberPath="System">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox
                                            IsEditable="False"
                                            Grid.Row="6"
                                            Grid.Column="1"
                                            HorizontalAlignment="Stretch"
                                            ItemsSource="{Binding DataContext.Data.SystemList, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                            DisplayMemberPath="Name"
                                            SelectedValue="{Binding System}"
                                            SelectedValuePath="Name" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn
                                Header="Backglass"
                                SortMemberPath="ShowBackglass">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox
                                            Grid.Row="1"
                                            Grid.Column="0"
                                            HorizontalAlignment="Center"
                                            IsChecked="{Binding ShowBackglass, UpdateSourceTrigger=PropertyChanged}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn
                                Header="DMD"
                                SortMemberPath="ShowDMD">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox
                                            Grid.Row="1"
                                            Grid.Column="0"
                                            HorizontalAlignment="Center"
                                            IsChecked="{Binding ShowDMD, UpdateSourceTrigger=PropertyChanged}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn
                                SortMemberPath="PlayfieldExists">
                                <DataGridTemplateColumn.Header>
                                    <TextBlock
                                        Text="P"
                                        ToolTip="Playfield Video Exists" />
                                </DataGridTemplateColumn.Header>
                                <DataGridTemplateColumn.CellTemplate>

                                    <DataTemplate>
                                        <StackPanel
                                            Orientation="Horizontal">

                                            <Button
                                                BorderThickness="0"
                                                Content="{iconPacks:Material Kind=PlayBoxOutline}"
                                                Command="{Binding DataContext.PreviewPlayfieldCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                                ToolTip="Preview Playfield Video">
                                                <Button.Style>
                                                    <Style
                                                        TargetType="Button"
                                                        BasedOn="{StaticResource {x:Type Button}}">
                                                        <Style.Triggers>
                                                            <DataTrigger
                                                                Binding="{Binding PlayfieldExists}"
                                                                Value="True">
                                                                <Setter
                                                                    Property="Background"
                                                                    Value="{StaticResource FileExists}" />
                                                            </DataTrigger>

                                                        </Style.Triggers>
                                                    </Style>
                                                </Button.Style>
                                            </Button>
                                            <!--<Button
                                                Content="{iconPacks:Material Kind=FileImport}"
                                                Command="{Binding DataContext.GetPlayfieldCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                                ToolTip="Import Playfield Video" />-->
                                        </StackPanel>

                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn
                                SortMemberPath="BackglassExists">
                                <DataGridTemplateColumn.Header>
                                    <TextBlock
                                        Text="B"
                                        ToolTip="Backglass Video Exists" />
                                </DataGridTemplateColumn.Header>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel
                                            Orientation="Horizontal">
                                            <!--<CheckBox
                                                IsHitTestVisible="False"
                                                HorizontalAlignment="Center"
                                                IsChecked="{Binding BackglassExists, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />-->
                                            <Button
                                                Content="{iconPacks:Material Kind=PlayBoxOutline}"
                                                Command="{Binding DataContext.PreviewBackglassCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                                ToolTip="Preview Backglass Video">
                                                <Button.Style>
                                                    <Style
                                                        TargetType="Button"
                                                        BasedOn="{StaticResource {x:Type Button}}">
                                                        <Style.Triggers>
                                                            <DataTrigger
                                                                Binding="{Binding BackglassExists}"
                                                                Value="True">
                                                                <Setter
                                                                    Property="Background"
                                                                    Value="{StaticResource FileExists}" />
                                                            </DataTrigger>

                                                        </Style.Triggers>
                                                    </Style>
                                                </Button.Style>
                                            </Button>
                                            <!--<Button
                                                Content="{iconPacks:Material Kind=FileImport}"
                                                Command="{Binding DataContext.GetBackglassCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                                ToolTip="Import Backglass Video" />-->
                                        </StackPanel>

                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn
                                SortMemberPath="DMDExists">
                                <DataGridTemplateColumn.Header>
                                    <TextBlock
                                        Text="D"
                                        ToolTip="DMD Video Exists" />
                                </DataGridTemplateColumn.Header>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel
                                            Orientation="Horizontal">
                                            <!--<CheckBox
                                                IsHitTestVisible="False"
                                                HorizontalAlignment="Center"
                                                IsChecked="{Binding DMDExists, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />-->
                                            <Button
                                                Content="{iconPacks:Material Kind=PlayBoxOutline}"
                                                Command="{Binding DataContext.PreviewDMDCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                                ToolTip="Preview DMD Video">
                                                <Button.Style>
                                                    <Style
                                                        TargetType="Button"
                                                        BasedOn="{StaticResource {x:Type Button}}">
                                                        <Style.Triggers>
                                                            <DataTrigger
                                                                Binding="{Binding DMDExists}"
                                                                Value="True">
                                                                <Setter
                                                                    Property="Background"
                                                                    Value="{StaticResource FileExists}" />
                                                            </DataTrigger>

                                                        </Style.Triggers>
                                                    </Style>
                                                </Button.Style>
                                            </Button>
                                            <!--<Button
                                                Content="{iconPacks:Material Kind=FileImport}"
                                                Command="{Binding DataContext.GetDMDCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                                ToolTip="Import DMD Video" />-->
                                        </StackPanel>

                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn
                                SortMemberPath="WheelExists">
                                <DataGridTemplateColumn.Header>
                                    <TextBlock
                                        Text="W"
                                        ToolTip="Wheel Image Exists" />
                                </DataGridTemplateColumn.Header>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel
                                            Orientation="Horizontal">
                                            <!--<CheckBox
                                                IsHitTestVisible="False"
                                                HorizontalAlignment="Center"
                                                IsChecked="{Binding WheelExists, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />-->
                                            <Button
                                                Content="{iconPacks:Material Kind=PlayBoxOutline}"
                                                Command="{Binding DataContext.PreviewWheelCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                                ToolTip="Preview Wheel Image">
                                                <Button.Style>
                                                    <Style
                                                        TargetType="Button"
                                                        BasedOn="{StaticResource {x:Type Button}}">
                                                        <Style.Triggers>
                                                            <DataTrigger
                                                                Binding="{Binding WheelExists}"
                                                                Value="True">
                                                                <Setter
                                                                    Property="Background"
                                                                    Value="{StaticResource FileExists}" />
                                                            </DataTrigger>

                                                        </Style.Triggers>
                                                    </Style>
                                                </Button.Style>
                                            </Button>
                                            <!--<Button
                                                Content="{iconPacks:Material Kind=FileImport}"
                                                Command="{Binding DataContext.GetWheelCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                                ToolTip="Import Wheel Image" />-->
                                        </StackPanel>

                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn
                                SortMemberPath="BGMusicExists">
                                <DataGridTemplateColumn.Header>
                                    <TextBlock
                                        Text="A"
                                        ToolTip="Table Audio Exists" />
                                </DataGridTemplateColumn.Header>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel
                                            Orientation="Horizontal">
                                            <!--<CheckBox
                                                IsHitTestVisible="False"
                                                HorizontalAlignment="Center"
                                                IsChecked="{Binding BGMusicExists, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />-->
                                            <Button
                                                Content="{iconPacks:Material Kind=PlayBoxOutline}"
                                                Command="{Binding DataContext.PreviewTableAudioCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                                ToolTip="Preview Table Audio">
                                                <Button.Style>
                                                    <Style
                                                        TargetType="Button"
                                                        BasedOn="{StaticResource {x:Type Button}}">
                                                        <Style.Triggers>
                                                            <DataTrigger
                                                                Binding="{Binding BGMusicExists}"
                                                                Value="True">
                                                                <Setter
                                                                    Property="Background"
                                                                    Value="{StaticResource FileExists}" />
                                                            </DataTrigger>

                                                        </Style.Triggers>
                                                    </Style>
                                                </Button.Style>
                                            </Button>
                                            <!--<Button
                                                Content="{iconPacks:Material Kind=FileImport}"
                                                Command="{Binding DataContext.GetTableAudioCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                                ToolTip="Import Table Audio" />-->
                                        </StackPanel>

                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn
                                SortMemberPath="LMusicExists">
                                <DataGridTemplateColumn.Header>
                                    <TextBlock
                                        Text="L"
                                        ToolTip="Launch Audio Exists" />
                                </DataGridTemplateColumn.Header>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel
                                            Orientation="Horizontal">
                                            <!--<CheckBox
                                                IsHitTestVisible="False"
                                                HorizontalAlignment="Center"
                                                IsChecked="{Binding LMusicExists, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />-->
                                            <Button
                                                Content="{iconPacks:Material Kind=PlayBoxOutline}"
                                                Command="{Binding DataContext.PreviewLaunchAudioCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                                ToolTip="Preview Launch Audio">
                                                <Button.Style>
                                                    <Style
                                                        TargetType="Button"
                                                        BasedOn="{StaticResource {x:Type Button}}">
                                                        <Style.Triggers>
                                                            <DataTrigger
                                                                Binding="{Binding LMusicExists}"
                                                                Value="True">
                                                                <Setter
                                                                    Property="Background"
                                                                    Value="{StaticResource FileExists}" />
                                                            </DataTrigger>

                                                        </Style.Triggers>
                                                    </Style>
                                                </Button.Style>
                                            </Button>
                                            <!--<Button
                                                Content="{iconPacks:Material Kind=FileImport}"
                                                Command="{Binding DataContext.GetTableAudioCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                                ToolTip="Import Launch Audio" />-->
                                        </StackPanel>

                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>




                        </DataGrid.Columns>

                        <DataGrid.RowDetailsTemplate>
                            <DataTemplate>


                                <Grid
                                    HorizontalAlignment="Left">

                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>

                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <!-- Playfield Row-->
                                        <RowDefinition />
                                        <!-- Backglass Row-->
                                        <RowDefinition />
                                        <!-- DMD Row -->
                                        <RowDefinition />
                                        <!-- Wheel Row -->
                                        <RowDefinition />
                                        <!-- Table Audio -->
                                        <RowDefinition />
                                        <!-- Launch Audio-->
                                        <RowDefinition />
                                    </Grid.RowDefinitions>


                                    <TextBlock
                                        Grid.Row="0"
                                        Grid.Column="0"
                                        Text="Playfield: "
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Center" />

                                    <StackPanel
                                        Grid.Row="0"
                                        Grid.Column="1"
                                        Orientation="Horizontal">


                                        <CheckBox
                                            IsHitTestVisible="False"
                                            HorizontalAlignment="Center"
                                            IsChecked="{Binding PlayfieldExists, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                                        <Button
                                            Content="{iconPacks:Material Kind=PlayBoxOutline}"
                                            Command="{Binding DataContext.PreviewPlayfieldCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                            ToolTip="Preview Playfield Video" />
                                        <Button
                                            Content="{iconPacks:Material Kind=FileImport}"
                                            Command="{Binding DataContext.GetPlayfieldCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                            ToolTip="Import Playfield Video" />




                                    </StackPanel>

                                    <TextBlock
                                        Grid.Row="1"
                                        Grid.Column="0"
                                        Text="Backglass: "
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Center" />
                                    <StackPanel
                                        Grid.Row="1"
                                        Grid.Column="1"
                                        Orientation="Horizontal">

                                        <CheckBox
                                            IsHitTestVisible="False"
                                            HorizontalAlignment="Center"
                                            IsChecked="{Binding BackglassExists, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                                        <Button
                                            Content="{iconPacks:Material Kind=PlayBoxOutline}"
                                            Command="{Binding DataContext.PreviewBackglassCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                            ToolTip="Preview Backglass Video" />
                                        <Button
                                            Content="{iconPacks:Material Kind=FileImport}"
                                            Command="{Binding DataContext.GetBackglassCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                            ToolTip="Import Backglass Video" />
                                    </StackPanel>

                                    <TextBlock
                                        Grid.Row="2"
                                        Grid.Column="0"
                                        Text="DMD: "
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Center" />
                                    <StackPanel
                                        Grid.Row="2"
                                        Grid.Column="1"
                                        Orientation="Horizontal">

                                        <CheckBox
                                            IsHitTestVisible="False"
                                            HorizontalAlignment="Center"
                                            IsChecked="{Binding DMDExists, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                                        <Button
                                            Content="{iconPacks:Material Kind=PlayBoxOutline}"
                                            Command="{Binding DataContext.PreviewDMDCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                            ToolTip="Preview DMD Video" />
                                        <Button
                                            Content="{iconPacks:Material Kind=FileImport}"
                                            Command="{Binding DataContext.GetDMDCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                            ToolTip="Import DMD Video" />
                                    </StackPanel>

                                    <TextBlock
                                        Grid.Row="3"
                                        Grid.Column="0"
                                        Text="Wheel: "
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Center" />
                                    <StackPanel
                                        Grid.Row="3"
                                        Grid.Column="1"
                                        Orientation="Horizontal">

                                        <CheckBox
                                            IsHitTestVisible="False"
                                            HorizontalAlignment="Center"
                                            IsChecked="{Binding WheelExists, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                                        <Button
                                            Content="{iconPacks:Material Kind=PlayBoxOutline}"
                                            Command="{Binding DataContext.PreviewWheelCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                            ToolTip="Preview Wheel Image" />
                                        <Button
                                            Content="{iconPacks:Material Kind=FileImport}"
                                            Command="{Binding DataContext.GetWheelCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                            ToolTip="Import Wheel Image" />
                                    </StackPanel>

                                    <TextBlock
                                        Grid.Row="4"
                                        Grid.Column="0"
                                        Text="Table Audio: "
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Center" />
                                    <StackPanel
                                        Grid.Row="4"
                                        Grid.Column="1"
                                        Orientation="Horizontal">

                                        <CheckBox
                                            IsHitTestVisible="False"
                                            HorizontalAlignment="Center"
                                            IsChecked="{Binding BGMusicExists, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                                        <Button
                                            Content="{iconPacks:Material Kind=PlayBoxOutline}"
                                            Command="{Binding DataContext.PreviewTableAudioCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                            ToolTip="Preview Table Audio" />
                                        <Button
                                            Content="{iconPacks:Material Kind=FileImport}"
                                            Command="{Binding DataContext.GetTableAudioCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                            ToolTip="Import Table Audio" />
                                    </StackPanel>

                                    <TextBlock
                                        Grid.Row="5"
                                        Grid.Column="0"
                                        Text="Launch Audio: "
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Center" />
                                    <StackPanel
                                        Grid.Row="5"
                                        Grid.Column="1"
                                        Orientation="Horizontal">

                                        <CheckBox
                                            IsHitTestVisible="False"
                                            HorizontalAlignment="Center"
                                            IsChecked="{Binding LMusicExists, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                                        <Button
                                            Content="{iconPacks:Material Kind=PlayBoxOutline}"
                                            Command="{Binding DataContext.PreviewLaunchAudioCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                            ToolTip="Preview Launch Audio" />
                                        <Button
                                            Content="{iconPacks:Material Kind=FileImport}"
                                            Command="{Binding DataContext.GetTableAudioCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                            ToolTip="Import Launch Audio" />
                                    </StackPanel>



                                </Grid>




                            </DataTemplate>

                        </DataGrid.RowDetailsTemplate>

                    </DataGrid>



                </Grid>







            </Grid>




        </Expander>

    </DockPanel>







</Controls:MetroWindow>
